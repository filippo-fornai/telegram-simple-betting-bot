from telegram import Update
from telegram.ext import ContextTypes
import random
from database import ScopedSession
from .command_handlers import close_session
from .db_utils import get_user
from telegram.constants import ParseMode

# This is called from a inlinekeyboard generated by a command (chat_id present)
async def callback_bet_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query

    _, amount_str, bet_owner_id_str, bet_owner_username = query.data.split("_")
    
    if not amount_str.isnumeric():
        await query.edit_message_text(text="Invalid bet amount.")
        return
    if not bet_owner_id_str.isnumeric():
        await query.edit_message_text(text="Invalid user ID.")
        return
    if not bet_owner_username:
        await query.edit_message_text(text="Invalid username.")
        return
    amount = int(amount_str)

    if int(bet_owner_id_str) == update.effective_user.id:
        await query.answer(
            text="‚ö†Ô∏è You can't accept your own bet!",
            show_alert=True  # This shows a modal instead of a toast
        )
        return
    
    session = ScopedSession()

    bet_owner = get_user(session, int(bet_owner_id_str), update.effective_chat.id)
    bet_challenger = get_user(session, update.effective_user.id, update.effective_chat.id)
    # Check if challenger has enough units to bet
    if (bet_challenger is None) or (bet_challenger.balance < amount):
        await query.answer(
            text="‚ö†Ô∏è You don't have enough units to accept this bet!",
            show_alert=True
        )
        
        # Session commit and close
        close_session(session)
        return

    # Deduct the amount from the challenger's balance
    bet_challenger.balance -= amount

    await query.answer()  # This is required to acknowledge the callback, or the client keeps spinning

    # Choose the winner randomly
    winner = random.choice([bet_owner, bet_challenger])
    winner.balance += amount*2


    if winner.user_id == bet_owner.user_id:
        response = f"üéâ *{bet_owner_username}* wins the bet of *{amount}* units\\! üéâ"
    else:
        response = f"üéâ *{update.effective_user.username}* wins the bet of *{amount}* units\\! üéâ"
    response += f"\n\n*\\-\\-\\-Results\\-\\-\\-*\n*{bet_owner_username}*: *{bet_owner.balance}* units\n*{update.effective_user.username}*: *{bet_challenger.balance}* units"

    await query.edit_message_text(text=response,parse_mode=ParseMode.MARKDOWN_V2)  # Optional: edit the inline message

    # Session commit and close
    close_session(session)
